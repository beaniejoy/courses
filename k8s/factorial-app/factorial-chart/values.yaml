replicaCount: 2

image:
  repository: hbleejoy/factorial-app
  pullPolicy: IfNotPresent
  # values에서 관리하는 것이 좋다.
  tag: "0.0.7"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: "512Mi"
    cpu: "1000m" # probe에서 아예 안돌 수 있기 때문에 넉넉하게
  limits:
    memory: "1Gi"
    cpu: "1500m"
startupProbe:
  httpGet:
    path: /probe/startup
    port: 8080
  initialDelaySeconds: 45
  periodSeconds: 1
  failureThreshold: 10
livenessProbe:
  httpGet:
    path: /probe/live
    port: http
  initialDelaySeconds: 45
  periodSeconds: 1
  failureThreshold: 10
readinessProbe:
  httpGet:
    path: /probe/ready
    port: http
  initialDelaySeconds: 45
  periodSeconds: 1
  successThreshold: 1
  failureThreshold: 2

# hpa 관련 설정
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
