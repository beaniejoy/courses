apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-factorial-app
  namespace: factorial
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: factorial-app
  template:
    metadata:
      labels:
        app: factorial-app
    spec:
      terminationGracePeriodSeconds: 60 # default 30s
      containers:
        - name: factorial
          image: hbleejoy/factorial-app:0.0.6
          imagePullPolicy: Always
          resources:
            requests:
              memory: "512Mi"
              cpu: "1000m" # probe에서 아예 안돌 수 있기 때문에 넉넉하게
            limits:
              memory: "1Gi"
              cpu: "1500m"
          lifecycle:
            preStop:
              exec:
                # terminationGracePeriodSeconds 시간 안에서 수행되는 것임
                command: ["/bin/sh", "-c", "sleep 10"]
          startupProbe:
            httpGet:
              path: /probe/startup
              port: 8080
            initialDelaySeconds: 45  # 평균적인 애플리케이션 실행완료시간
            periodSeconds: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /probe/ready
              port: 8080
            initialDelaySeconds: 45  # startupProbe 설정되어있으면 크게 의미가 없다.
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 2 # readiness는 좀더 민감하게 거는 것이 좋다.
          livenessProbe:
            httpGet:
              path: /probe/live
              port: 8080
            initialDelaySeconds: 45  # startupProbe 설정되어있으면 크게 의미가 없다.
            periodSeconds: 1
            failureThreshold: 10  # readiness에 비해 덜 민감하게 잡는 것이 좋다. (재시작 시켜버리기 때문)